[versions]
agp = "8.11.0"

android-compileSdk = "35"
android-minSdk = "21"
android-targetSdk = "35"


androidx-tooling = "1.7.5"
androidxactivity = "1.9.3"
androidx-uiTest = "1.7.5"

lifecycle = "2.9.1"
compose-plugin = "1.8.2"

ksp = "2.1.0-1.0.29"
kotlin = "2.2.0"
coroutines = "1.10.2"
ktor = "3.0.1"

kstore = "1.0.0"
circuit = "0.25.0"
kotlininject = "0.8.0"
logback = "1.5.12"
oidc = "0.9.2"
exposedVersion = "0.56.0"
coil = "3.0.4"

koin = "4.1.0-Beta8"
junit5 = "5.11.3"

[libraries]
androidx-browser = { group = "androidx.browser", name = "browser", version = "1.8.0" }
androidx-core = { group = "androidx.core", name = "core-ktx", version = "1.15.0" }
androidx-activity-activity = { module = "androidx.activity:activity", version.ref = "androidxactivity" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidxactivity" }
androidx-testManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidx-uiTest" }
androidx-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidx-uiTest" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "androidx-tooling" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "androidx-tooling" }
androidx-lifecycle-runtime-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
androidx-lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycle" }

compose-material3-windowsizeclass = "dev.chrisbanes.material3:material3-window-size-class-multiplatform:0.5.0"

google-firebase-analytics = "com.google.firebase:firebase-analytics:22.5.0"
google-firebase-crashlytics = "com.google.firebase:firebase-crashlytics:19.4.4"

google-firebase-perf = "com.google.firebase:firebase-perf:21.0.5"

crashkios-crashlytics = "co.touchlab.crashkios:crashlytics:0.9.0"

timber = "com.jakewharton.timber:timber:5.0.1"

leakCanary = "com.squareup.leakcanary:leakcanary-android:2.14"

coil-core = { module = "io.coil-kt.coil3:coil-core", version.ref = "coil" }
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network = { module = "io.coil-kt.coil3:coil-network-ktor2", version.ref = "coil" }

kstore = { module = "io.github.xxfast:kstore", version.ref = "kstore" }
kstore-file = { module = "io.github.xxfast:kstore-file", version.ref = "kstore" }
kstore-storage = { module = "io.github.xxfast:kstore-storage", version.ref = "kstore" }


kotlinx-serialization = "org.jetbrains.kotlinx:kotlinx-serialization-json:1.7.3"

kotlin-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlin-coroutines-swing = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-swing", version.ref = "coroutines" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }

ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-cors = { module = "io.ktor:ktor-server-cors", version.ref = "ktor" }
ktor-server-common = { module = "io.ktor:ktor-server-host-common", version.ref = "ktor" }
ktor-server-status-page = { module = "io.ktor:ktor-server-status-pages", version.ref = "ktor" }
ktor-server-logging = { module = "io.ktor:ktor-server-call-logging", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }
ktor-server-config-yaml = { module = "io.ktor:ktor-server-config-yaml", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth-jvm", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt-jvm", version.ref = "ktor" }

ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-android = { group = "io.ktor", name = "ktor-client-android", version.ref = "ktor" }
ktor-client-darwin = { group = "io.ktor", name = "ktor-client-darwin", version.ref = "ktor" }
ktor-client-java = { group = "io.ktor", name = "ktor-client-java", version.ref = "ktor" }
ktor-client-js = { group = "io.ktor", name = "ktor-client-js", version.ref = "ktor" }
ktor-client-serialization-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
ktor-client-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }

exposed-core = { module = "org.jetbrains.exposed:exposed-core", version.ref = "exposedVersion" }
exposed-dao = { module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposedVersion" }
exposed-jdbc = { module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposedVersion" }
exposed-jodatime = { module = "org.jetbrains.exposed:exposed-jodatime", version.ref = "exposedVersion" }
exposed-h2Db = "com.h2database:h2:2.3.232"
exposed-hikariCp = "com.zaxxer:HikariCP:6.2.1"
exposed-postgres = "org.postgresql:postgresql:42.7.4"

kotlininject-compiler = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "kotlininject" }
kotlininject-runtime = { module = "me.tatarka.inject:kotlin-inject-runtime", version.ref = "kotlininject" }

circuit-foundation = { module = "com.slack.circuit:circuit-foundation", version.ref = "circuit" }
circuitx-gestureNavigation = { module = "com.slack.circuit:circuitx-gesture-navigation", version.ref = "circuit" }
circuit-overlay = { module = "com.slack.circuit:circuit-overlay", version.ref = "circuit" }
circuit-retained = { module = "com.slack.circuit:circuit-retained", version.ref = "circuit" }
circuit-runtime = { module = "com.slack.circuit:circuit-runtime", version.ref = "circuit" }

koin-ktor = { module = "io.insert-koin:koin-ktor3", version.ref = "koin" }
koin-logger = { module = "io.insert-koin:koin-logger-slf4j", version.ref = "koin" }

kotlinx-atomicfu = "org.jetbrains.kotlinx:atomicfu:0.26.1"
kotlinx-datetime = "org.jetbrains.kotlinx:kotlinx-datetime:0.6.1"
kermit = "co.touchlab:kermit:2.0.5"

uuid = "com.benasher44:uuid:0.8.4"

test-mockk = "io.mockk:mockk:1.13.13"
test-coroutine = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

test-junit5-suite = "org.junit.platform:junit-platform-suite:1.11.3"
test-junit5 = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit5" }
test-junit5-runtime = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit5" }

test-koin = { module = "io.insert-koin:koin-test", version.ref = "koin" }
test-koin-junit5 = { module = "io.insert-koin:koin-test-junit5", version.ref = "koin" }
test-kotlin = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }

test-assertk = "com.willowtreeapps.assertk:assertk:0.28.1"
[plugins]
android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
jetbrains-compose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }
jetbrains-kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
jetbrains-compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

android-lint = { id = "com.android.lint", version.ref = "agp" }
android-test = { id = "com.android.test", version.ref = "agp" }
buildConfig = "com.github.gmazzo.buildconfig:5.6.7"
gms-googleServices = "com.google.gms.google-services:4.4.2"
firebase-crashlytics = "com.google.firebase.crashlytics:3.0.4"

ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
